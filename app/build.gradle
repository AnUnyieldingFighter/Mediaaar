apply plugin: 'com.android.application'

android {
    namespace 'com.media.option'

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode 12
        versionName "1.2"

    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    signingConfigs {
        key {
            storeFile file(signFile)
            storePassword signPwd
            keyAlias signAlias
            keyPassword signPwd
        }

    }
    buildTypes {
        //有日志
        release {
            minifyEnabled true
            shrinkResources true//去掉不用资源
            signingConfig signingConfigs.key
            resValue "string", "app_buildTypes", "release"

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {
            minifyEnabled false
            shrinkResources false//去掉不用资源
            signingConfig signingConfigs.key
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
   /* productFlavors {
        //测试环境
        trial {


        }
        //正式环境
        dev {

        }

    }*/
    /*applicationVariants.all { variant ->
        def outputFileDir = "${project.projectDir.absolutePath}/${variant.buildType.name}"
        def today = new Date()
        def env = ""
        variant.outputs.forEach {
            variant.productFlavors.each { product ->
                if (product.name == "trial") {
                    env = "test_"
                } else if (product.name == "dev") {
                    env = "dev_"
                }
            }
            def appNameData = "app"
            def versionName = "version"
            def path = appNameData + "_" + android.defaultConfig.applicationId + "_V" + variant.versionName + "_" + env + "_" + today.format('yyyyMMddHHmm', TimeZone.getTimeZone("GMT+08:00")) + "_" + variant.buildType.name + ".apk"
            //def path=env+appNameData
            it.outputFileName = path
        }
    }*/
}

//使用arr配置
//repositories { flatDir { dirs 'libs' } }
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //使用arr
    implementation("androidx.multidex:multidex:2.0.1")
    //绑定了 androidx.fragment:fragment:1.1.0 使用google图片选择器 就需要升级
    //implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'

    implementation 'com.google.android.material:material:1.3.0'

    implementation 'com.github.bumptech.glide:glide:3.7.0'
    //compile 'nl.bravobit:android-ffmpeg:1.1.5'
    //compile 'com.github.452693688:SelectImage:ef724466b4'
    implementation project(':option')
    //api 'com.github.AnUnyieldingFighter.Mediaaar:media:3.0'

    // implementation(name:'option1.2.6',ext:'aar')
    //implementation 'androidx.activity:activity:1.10.1'
    //implementation 'androidx.activity:activity-compose:1.9.0'

}
